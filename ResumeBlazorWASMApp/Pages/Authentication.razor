@page "/authentication"
@using ResumeBlazorWASMApp.Services
@inject SupabaseService SupabaseService
@inject Authentication Auth
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@using MudBlazor


<h3>Authentication</h3>
@* <button @onclick="FetchData">Fetch Data</button> *@
@* <p>@data</p> *@
@* <button @onclick="ShowMessage">Show Snackbar</button> *@
@* <MudButton OnClick="@(() => Snackbar.Add("Test Snackbar", Severity.Info))">Test Snackbar</MudButton> *@


<MudText Typo="Typo.h5">Welcome</MudText>
        <br/>
        @* <MudTextField Label="Email" @bind-Value="Email"></MudTextField> *@
        <label>Email</label>
        <InputText @bind-Value="Email" required></InputText>
        <label>Password</label>
        <InputText @bind-Value="Password" required></InputText>
        @* <MudTextField Label="Password" @bind-Value="Password"></MudTextField> *@
        <br/>
        <button class="submit-button" @onclick="ShowMessage">Show Message</button>
        <p>@data</p>
   

@code {
    private string data;
    private string Email { get; set; }
    private string Password { get; set; }

    private async Task FetchData()
    {
        data = await SupabaseService.GetDataAsync();
    }

    private void ShowMessage()
    {
        Console.WriteLine(Snackbar);
        Console.WriteLine("snackbar message");
        Snackbar.Add("This is a snackbar message!", Severity.Info);
    }

    public async Task OnClickSignUp()
    {
        var result = await SupabaseService.SignUp(Email, Password);
        Snackbar.Add("Signed up!", Severity.Success);
    }
}